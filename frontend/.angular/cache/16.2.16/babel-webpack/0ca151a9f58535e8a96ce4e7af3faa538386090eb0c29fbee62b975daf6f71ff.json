{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoadingService {\n  constructor() {\n    this.loadingSubject = new BehaviorSubject(false);\n    this.loading$ = this.loadingSubject.asObservable();\n  }\n  setLoading(loading) {\n    this.loadingSubject.next(loading);\n  }\n  static {\n    this.ɵfac = function LoadingService_Factory(t) {\n      return new (t || LoadingService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingService,\n      factory: LoadingService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","LoadingService","constructor","loadingSubject","loading$","asObservable","setLoading","loading","next","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\core\\services\\loading.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n  loading$ = this.loadingSubject.asObservable();\r\n\r\n  setLoading(loading: boolean): void {\r\n    this.loadingSubject.next(loading);\r\n  }\r\n} "],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,cAAc;EAH3BC,YAAA;IAIU,KAAAC,cAAc,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IAC5D,KAAAI,QAAQ,GAAG,IAAI,CAACD,cAAc,CAACE,YAAY,EAAE;;EAE7CC,UAAUA,CAACC,OAAgB;IACzB,IAAI,CAACJ,cAAc,CAACK,IAAI,CAACD,OAAO,CAAC;EACnC;;;uBANWN,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAQ,OAAA,EAAdR,cAAc,CAAAS,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}