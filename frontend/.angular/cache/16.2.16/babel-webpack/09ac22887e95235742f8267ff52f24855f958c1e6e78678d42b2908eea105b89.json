{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TicketListComponent = class TicketListComponent {\n  // Már nem használunk hardcoded árakat, minden értéket a backendbtől vesznünk\n  constructor(ticketService) {\n    this.ticketService = ticketService;\n    this.tickets = [];\n    this.activeTickets = [];\n    this.cancelledTickets = [];\n    this.showCancelledTickets = false;\n    this.loading = false;\n    this.error = null;\n  }\n  ngOnInit() {\n    this.loadTickets();\n  }\n  loadTickets() {\n    this.loading = true;\n    this.error = null;\n    this.ticketService.getUserTickets().subscribe({\n      next: tickets => {\n        console.log('Betöltött jegyek:', tickets);\n        // Részletesen kilogoljuk a jegyek adatait a hiba diagnosztikálásához\n        if (tickets && tickets.length > 0) {\n          tickets.forEach((ticket, index) => {\n            console.log(`Jegy #${index + 1}:`, {\n              id: ticket._id,\n              státusz: ticket.status,\n              esemény: ticket.event ? ticket.event.title : 'Nincs esemény adat',\n              kategória: ticket.category,\n              kategóriaTípus: typeof ticket.category,\n              ár: this.getTicketPrice(ticket)\n            });\n          });\n        } else {\n          console.warn('Nincsenek jegyek, vagy üres tömb érkezett!');\n        }\n        this.tickets = tickets || [];\n        // Mivel TypeScript problémák vannak a státusz összehasonlításánál,\n        // egyértelműen definiáljuk az aktív és inaktív jegyeket\n        this.activeTickets = [];\n        this.cancelledTickets = [];\n        // Egyesével ellenőrizzük a jegyek státuszát\n        tickets.forEach(ticket => {\n          if (ticket.status) {\n            const statusLower = String(ticket.status).toLowerCase();\n            if (statusLower === 'cancelled' || statusLower === 'lemondva') {\n              this.cancelledTickets.push(ticket);\n            } else {\n              // Minden más értéket aktívnak tekintünk (pl. 'active', 'confirmed', stb.)\n              this.activeTickets.push(ticket);\n            }\n          } else {\n            // Ha nincs státusz, akkor aktívnak tekintjük\n            this.activeTickets.push(ticket);\n          }\n        });\n        console.log('Aktív jegyek:', this.activeTickets.length);\n        console.log('Lemondott jegyek:', this.cancelledTickets.length);\n        this.loading = false;\n      },\n      error: err => {\n        this.error = 'Hiba történt a jegyek betöltése közben. Kérjük próbálja újra később.';\n        this.loading = false;\n        console.error('Hiba a jegyek betöltése közben:', err);\n      }\n    });\n  }\n  /**\n   * Jegy státusz kapcsoló\n   */\n  toggleCancelledTickets() {\n    this.showCancelledTickets = !this.showCancelledTickets;\n  }\n  /**\n   * Jegy árának meghatározása\n   * Mivel a backend csak string-et küld a kategóriára (nem objektumot),\n   * ezért itt határozzuk meg az árat a kategória nevéből\n   */\n  getTicketPrice(ticket) {\n    console.log('Jegy ár kiszámítás:', {\n      ticketId: ticket._id,\n      category: ticket.category,\n      categoryType: typeof ticket.category\n    });\n    // Elsődleges és legjobb eset: a kategória objektum és van price tulajdonsága\n    if (ticket.category && typeof ticket.category === 'object' && 'price' in ticket.category) {\n      console.log('Objektum ár:', ticket.category.price);\n      return ticket.category.price;\n    }\n    // Ha a kategoria egy objektum, próbáljunk más tulajdonságokat is ellenőrizni\n    if (ticket.category && typeof ticket.category === 'object') {\n      // TypeScript hiba elkerülése érdekében explicit típuskonverziót végzünk\n      const categoryObj = ticket.category;\n      // Kerssük meg az árat bármilyen property néven\n      if (categoryObj.price !== undefined) {\n        console.log('Talált ár price tulajdonságban:', categoryObj.price);\n        return categoryObj.price;\n      } else if (categoryObj.amount !== undefined) {\n        console.log('Talált ár amount tulajdonságban:', categoryObj.amount);\n        return categoryObj.amount;\n      } else if (categoryObj.cost !== undefined) {\n        console.log('Talált ár cost tulajdonságban:', categoryObj.cost);\n        return categoryObj.cost;\n      }\n    }\n    // Fallback érték, ha semmi sem működik\n    console.warn('Nem sikerült árat meghatározni a jegyhez:', ticket);\n    return 0;\n  }\n  cancelTicket(ticketId) {\n    if (confirm('Biztosan lemondód ezt a jegyet?')) {\n      this.ticketService.cancelTicket(ticketId).subscribe({\n        next: () => {\n          this.loadTickets();\n        },\n        error: err => {\n          this.error = 'Hiba történt a jegy lemondása közben. Kérjük próbálja újra később.';\n          console.error('Hiba a jegy lemondása közben:', err);\n        }\n      });\n    }\n  }\n};\nTicketListComponent = __decorate([Component({\n  selector: 'app-ticket-list',\n  templateUrl: './ticket-list.component.html',\n  styleUrls: ['./ticket-list.component.css']\n})], TicketListComponent);","map":{"version":3,"names":["Component","TicketListComponent","constructor","ticketService","tickets","activeTickets","cancelledTickets","showCancelledTickets","loading","error","ngOnInit","loadTickets","getUserTickets","subscribe","next","console","log","length","forEach","ticket","index","id","_id","státusz","status","esemény","event","title","kategória","category","kategóriaTípus","ár","getTicketPrice","warn","statusLower","String","toLowerCase","push","err","toggleCancelledTickets","ticketId","categoryType","price","categoryObj","undefined","amount","cost","cancelTicket","confirm","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\components\\ticket\\ticket-list\\ticket-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TicketService } from '../../../services/ticket.service';\nimport { Ticket } from '../../../models/ticket.model';\n\n@Component({\n  selector: 'app-ticket-list',\n  templateUrl: './ticket-list.component.html',\n  styleUrls: ['./ticket-list.component.css']\n})\nexport class TicketListComponent implements OnInit {\n  tickets: Ticket[] = [];\n  activeTickets: Ticket[] = [];\n  cancelledTickets: Ticket[] = [];\n  showCancelledTickets = false;\n  loading = false;\n  error: string | null = null;\n  \n  // Már nem használunk hardcoded árakat, minden értéket a backendbtől vesznünk\n\n  constructor(private ticketService: TicketService) {}\n\n  ngOnInit(): void {\n    this.loadTickets();\n  }\n\n  loadTickets(): void {\n    this.loading = true;\n    this.error = null;\n\n    this.ticketService.getUserTickets().subscribe({\n      next: (tickets: Ticket[]) => {\n        console.log('Betöltött jegyek:', tickets);\n        \n        // Részletesen kilogoljuk a jegyek adatait a hiba diagnosztikálásához\n        if (tickets && tickets.length > 0) {\n          tickets.forEach((ticket, index) => {\n            console.log(`Jegy #${index + 1}:`, {\n              id: ticket._id,\n              státusz: ticket.status, // Ez lehet 'active', 'cancelled', vagy akár magyar nyelvű érték is\n              esemény: ticket.event ? ticket.event.title : 'Nincs esemény adat',\n              kategória: ticket.category,\n              kategóriaTípus: typeof ticket.category,\n              ár: this.getTicketPrice(ticket)\n            });\n          });\n        } else {\n          console.warn('Nincsenek jegyek, vagy üres tömb érkezett!');\n        }\n        \n        this.tickets = tickets || [];\n        \n        // Mivel TypeScript problémák vannak a státusz összehasonlításánál,\n        // egyértelműen definiáljuk az aktív és inaktív jegyeket\n        this.activeTickets = [];\n        this.cancelledTickets = [];\n        \n        // Egyesével ellenőrizzük a jegyek státuszát\n        tickets.forEach(ticket => {\n          if (ticket.status) {\n            const statusLower = String(ticket.status).toLowerCase();\n            \n            if (statusLower === 'cancelled' || statusLower === 'lemondva') {\n              this.cancelledTickets.push(ticket);\n            } else {\n              // Minden más értéket aktívnak tekintünk (pl. 'active', 'confirmed', stb.)\n              this.activeTickets.push(ticket);\n            }\n          } else {\n            // Ha nincs státusz, akkor aktívnak tekintjük\n            this.activeTickets.push(ticket);\n          }\n        });\n        \n        console.log('Aktív jegyek:', this.activeTickets.length);\n        console.log('Lemondott jegyek:', this.cancelledTickets.length);\n        \n        this.loading = false;\n      },\n      error: (err: any) => {\n        this.error = 'Hiba történt a jegyek betöltése közben. Kérjük próbálja újra később.';\n        this.loading = false;\n        console.error('Hiba a jegyek betöltése közben:', err);\n      }\n    });\n  }\n  \n  /**\n   * Jegy státusz kapcsoló\n   */\n  toggleCancelledTickets(): void {\n    this.showCancelledTickets = !this.showCancelledTickets;\n  }\n  \n  /**\n   * Jegy árának meghatározása\n   * Mivel a backend csak string-et küld a kategóriára (nem objektumot), \n   * ezért itt határozzuk meg az árat a kategória nevéből\n   */\n  getTicketPrice(ticket: Ticket): number {\n    console.log('Jegy ár kiszámítás:', {\n      ticketId: ticket._id,\n      category: ticket.category,\n      categoryType: typeof ticket.category\n    });\n    \n    // Elsődleges és legjobb eset: a kategória objektum és van price tulajdonsága\n    if (ticket.category && typeof ticket.category === 'object' && 'price' in ticket.category) {\n      console.log('Objektum ár:', ticket.category.price);\n      return ticket.category.price;\n    }\n    \n    // Ha a kategoria egy objektum, próbáljunk más tulajdonságokat is ellenőrizni\n    if (ticket.category && typeof ticket.category === 'object') {\n      // TypeScript hiba elkerülése érdekében explicit típuskonverziót végzünk\n      const categoryObj = ticket.category as any;\n      \n      // Kerssük meg az árat bármilyen property néven\n      if (categoryObj.price !== undefined) {\n        console.log('Talált ár price tulajdonságban:', categoryObj.price);\n        return categoryObj.price;\n      } else if (categoryObj.amount !== undefined) {\n        console.log('Talált ár amount tulajdonságban:', categoryObj.amount);\n        return categoryObj.amount;\n      } else if (categoryObj.cost !== undefined) {\n        console.log('Talált ár cost tulajdonságban:', categoryObj.cost);\n        return categoryObj.cost;\n      }\n    }\n    \n    // Fallback érték, ha semmi sem működik\n    console.warn('Nem sikerült árat meghatározni a jegyhez:', ticket);\n    return 0;\n  }\n\n  cancelTicket(ticketId: string): void {\n    if (confirm('Biztosan lemondód ezt a jegyet?')) {\n      this.ticketService.cancelTicket(ticketId).subscribe({\n        next: () => {\n          this.loadTickets();\n        },\n        error: (err: any) => {\n          this.error = 'Hiba történt a jegy lemondása közben. Kérjük próbálja újra később.';\n          console.error('Hiba a jegy lemondása közben:', err);\n        }\n      });\n    }\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}