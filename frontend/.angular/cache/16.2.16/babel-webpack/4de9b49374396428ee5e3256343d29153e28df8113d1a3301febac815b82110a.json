{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TicketService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/tickets`;\n  }\n  /**\n   * Jegy vásárlása\n   * @param eventId Esemény azonosító\n   * @param categoryId A jegy kategória azonosítója\n   * @param quantity Megvásárolni kívánt jegyek száma\n   */\n  purchaseTicket(eventId, categoryId, quantity) {\n    return this.http.post(`${environment.apiUrl}/tickets`, {\n      eventId,\n      categoryId,\n      quantity\n    });\n  }\n  getUserTickets() {\n    return this.http.get(`${this.apiUrl}/user`);\n  }\n  cancelTicket(ticketId) {\n    return this.http.post(`${this.apiUrl}/${ticketId}/cancel`, {});\n  }\n  getEventTickets(eventId) {\n    return this.http.get(`${environment.apiUrl}/api/tickets/event/${eventId}`);\n  }\n  static {\n    this.ɵfac = function TicketService_Factory(t) {\n      return new (t || TicketService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TicketService,\n      factory: TicketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","TicketService","constructor","http","apiUrl","purchaseTicket","eventId","categoryId","quantity","post","getUserTickets","get","cancelTicket","ticketId","getEventTickets","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\services\\ticket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Ticket } from '../models/ticket.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketService {\n  private apiUrl = `${environment.apiUrl}/tickets`;\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Jegy vásárlása\n   * @param eventId Esemény azonosító\n   * @param categoryId A jegy kategória azonosítója\n   * @param quantity Megvásárolni kívánt jegyek száma\n   */\n  purchaseTicket(eventId: string, categoryId: string, quantity: number): Observable<Ticket> {\n    return this.http.post<Ticket>(`${environment.apiUrl}/tickets`, {\n      eventId,\n      categoryId,\n      quantity\n    });\n  }\n\n  getUserTickets(): Observable<Ticket[]> {\n    return this.http.get<Ticket[]>(`${this.apiUrl}/user`);\n  }\n\n  cancelTicket(ticketId: string): Observable<void> {\n    return this.http.post<void>(`${this.apiUrl}/${ticketId}/cancel`, {});\n  }\n\n  getEventTickets(eventId: string): Observable<Ticket[]> {\n    return this.http.get<Ticket[]>(`${environment.apiUrl}/api/tickets/event/${eventId}`);\n  }\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,UAAU;EAET;EAEvC;;;;;;EAMAC,cAAcA,CAACC,OAAe,EAAEC,UAAkB,EAAEC,QAAgB;IAClE,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAS,GAAGT,WAAW,CAACI,MAAM,UAAU,EAAE;MAC7DE,OAAO;MACPC,UAAU;MACVC;KACD,CAAC;EACJ;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAW,GAAG,IAAI,CAACP,MAAM,OAAO,CAAC;EACvD;EAEAQ,YAAYA,CAACC,QAAgB;IAC3B,OAAO,IAAI,CAACV,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACL,MAAM,IAAIS,QAAQ,SAAS,EAAE,EAAE,CAAC;EACtE;EAEAC,eAAeA,CAACR,OAAe;IAC7B,OAAO,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAW,GAAGX,WAAW,CAACI,MAAM,sBAAsBE,OAAO,EAAE,CAAC;EACtF;;;uBA7BWL,aAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbjB,aAAa;MAAAkB,OAAA,EAAblB,aAAa,CAAAmB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}