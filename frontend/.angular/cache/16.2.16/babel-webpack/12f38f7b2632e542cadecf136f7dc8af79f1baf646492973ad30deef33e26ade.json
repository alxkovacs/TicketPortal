{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/auth`;\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSubject.asObservable();\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      console.log('LOADED USER FROM STORAGE:', user);\n      this.currentUserSubject.next(user);\n    }\n  }\n  register(userData) {\n    return this.http.post(`${this.apiUrl}/register`, userData).pipe(tap(user => {\n      this.currentUserSubject.next(user);\n      localStorage.setItem('currentUser', JSON.stringify(user));\n    }));\n  }\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/login`, credentials).pipe(tap(response => {\n      console.log('LOGIN RESPONSE:', response);\n      this.currentUserSubject.next(response.user);\n      localStorage.setItem('currentUser', JSON.stringify(response.user));\n      localStorage.setItem('token', response.token);\n    }));\n  }\n  logout() {\n    this.currentUserSubject.next(null);\n    localStorage.removeItem('currentUser');\n  }\n  isAuthenticated() {\n    return this.currentUserSubject.value !== null;\n  }\n  getUserRole() {\n    return this.currentUserSubject.value?.role || null;\n  }\n  getCurrentUser() {\n    return this.currentUserSubject.value;\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","tap","environment","AuthService","constructor","http","apiUrl","currentUserSubject","currentUser$","asObservable","storedUser","localStorage","getItem","user","JSON","parse","console","log","next","register","userData","post","pipe","setItem","stringify","login","credentials","response","token","logout","removeItem","isAuthenticated","value","getUserRole","role","getCurrentUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = `${environment.apiUrl}/auth`;\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  public currentUser$ = this.currentUserSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    const storedUser = localStorage.getItem('currentUser');\r\n    if (storedUser) {\r\n      const user = JSON.parse(storedUser);\r\n      console.log('LOADED USER FROM STORAGE:', user);\r\n      this.currentUserSubject.next(user);\r\n    }\r\n  }\r\n\r\n  register(userData: {\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n  }): Observable<User> {\r\n    return this.http.post<User>(`${this.apiUrl}/register`, userData)\r\n      .pipe(tap(user => {\r\n        this.currentUserSubject.next(user);\r\n        localStorage.setItem('currentUser', JSON.stringify(user));\r\n      }));\r\n  }\r\n\r\n  login(credentials: { email: string; password: string }): Observable<{ user: User, token: string }> {\r\n    return this.http.post<{ user: User, token: string }>(`${this.apiUrl}/login`, credentials).pipe(\r\n      tap(response => {\r\n        console.log('LOGIN RESPONSE:', response);\r\n        this.currentUserSubject.next(response.user);\r\n        localStorage.setItem('currentUser', JSON.stringify(response.user));\r\n        localStorage.setItem('token', response.token);\r\n      })\r\n    );\r\n  }\r\n\r\n  logout(): void {\r\n    this.currentUserSubject.next(null);\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.currentUserSubject.value !== null;\r\n  }\r\n\r\n  getUserRole(): string | null {\r\n    return this.currentUserSubject.value?.role || null;\r\n  }\r\n\r\n  getCurrentUser(): User | null {\r\n    return this.currentUserSubject.value;\r\n  }\r\n} "],"mappings":"AAEA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;AACvD,SAASC,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,OAAO;IACrC,KAAAC,kBAAkB,GAAG,IAAIP,eAAe,CAAc,IAAI,CAAC;IAC5D,KAAAQ,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;IAG1D,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACtD,IAAIF,UAAU,EAAE;MACd,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC;MACnCM,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEJ,IAAI,CAAC;MAC9C,IAAI,CAACN,kBAAkB,CAACW,IAAI,CAACL,IAAI,CAAC;;EAEtC;EAEAM,QAAQA,CAACC,QAKR;IACC,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAO,GAAG,IAAI,CAACf,MAAM,WAAW,EAAEc,QAAQ,CAAC,CAC7DE,IAAI,CAACrB,GAAG,CAACY,IAAI,IAAG;MACf,IAAI,CAACN,kBAAkB,CAACW,IAAI,CAACL,IAAI,CAAC;MAClCF,YAAY,CAACY,OAAO,CAAC,aAAa,EAAET,IAAI,CAACU,SAAS,CAACX,IAAI,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;EACP;EAEAY,KAAKA,CAACC,WAAgD;IACpD,OAAO,IAAI,CAACrB,IAAI,CAACgB,IAAI,CAAgC,GAAG,IAAI,CAACf,MAAM,QAAQ,EAAEoB,WAAW,CAAC,CAACJ,IAAI,CAC5FrB,GAAG,CAAC0B,QAAQ,IAAG;MACbX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEU,QAAQ,CAAC;MACxC,IAAI,CAACpB,kBAAkB,CAACW,IAAI,CAACS,QAAQ,CAACd,IAAI,CAAC;MAC3CF,YAAY,CAACY,OAAO,CAAC,aAAa,EAAET,IAAI,CAACU,SAAS,CAACG,QAAQ,CAACd,IAAI,CAAC,CAAC;MAClEF,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEI,QAAQ,CAACC,KAAK,CAAC;IAC/C,CAAC,CAAC,CACH;EACH;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACtB,kBAAkB,CAACW,IAAI,CAAC,IAAI,CAAC;IAClCP,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC;EACxC;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACxB,kBAAkB,CAACyB,KAAK,KAAK,IAAI;EAC/C;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAAC1B,kBAAkB,CAACyB,KAAK,EAAEE,IAAI,IAAI,IAAI;EACpD;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAAC5B,kBAAkB,CAACyB,KAAK;EACtC;;;uBArDW7B,WAAW,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXpC,WAAW;MAAAqC,OAAA,EAAXrC,WAAW,CAAAsC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}