{"ast":null,"code":"import { BehaviorSubject, map, tap, catchError, throwError } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../core/services/error.service\";\nimport * as i3 from \"../../../core/services/loading.service\";\nexport class AuthService {\n  constructor(http, errorService, loadingService) {\n    this.http = http;\n    this.errorService = errorService;\n    this.loadingService = loadingService;\n    this.apiUrl = `${environment.apiUrl}/auth`;\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser$ = this.currentUserSubject.asObservable();\n    this.isAuthenticated$ = this.currentUser$.pipe(map(user => !!user));\n    this.isAdmin$ = this.currentUser$.pipe(map(user => user?.role === 'admin'));\n    const token = localStorage.getItem('token');\n    if (token) {\n      this.loadUserFromToken(token);\n    }\n  }\n  login(email, password) {\n    this.loadingService.setLoading(true);\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(response => {\n      console.log('Login response:', response);\n      localStorage.setItem('token', response.token);\n      this.currentUserSubject.next(response.user);\n      this.loadingService.setLoading(false);\n    }), catchError(error => {\n      this.loadingService.setLoading(false);\n      console.error('Login error:', error);\n      if (error.status === 401) {\n        return throwError(() => new Error('Hibás email cím vagy jelszó!'));\n      }\n      return throwError(() => new Error('Hiba történt a bejelentkezés során. Kérjük próbálja újra később.'));\n    }));\n  }\n  register(firstName, lastName, email, password) {\n    this.loadingService.setLoading(true);\n    return this.http.post(`${this.apiUrl}/register`, {\n      firstName,\n      lastName,\n      email,\n      password\n    }).pipe(tap(response => {\n      console.log('Register response:', response);\n      localStorage.setItem('token', response.token);\n      this.currentUserSubject.next(response.user);\n      this.loadingService.setLoading(false);\n    }), catchError(error => {\n      this.loadingService.setLoading(false);\n      console.error('Register error:', error);\n      if (error.status === 400) {\n        return throwError(() => new Error('Ez az email cím már foglalt!'));\n      }\n      return throwError(() => new Error('Hiba történt a regisztráció során. Kérjük próbálja újra később.'));\n    }));\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.currentUserSubject.next(null);\n  }\n  loadUserFromToken(token) {\n    this.http.get(`${this.apiUrl}/me`).subscribe({\n      next: user => {\n        console.log('Loaded user from token:', user);\n        this.currentUserSubject.next(user);\n      },\n      error: error => {\n        console.error('Error loading user from token:', error);\n        localStorage.removeItem('token');\n        this.currentUserSubject.next(null);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService), i0.ɵɵinject(i3.LoadingService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","map","tap","catchError","throwError","environment","AuthService","constructor","http","errorService","loadingService","apiUrl","currentUserSubject","currentUser$","asObservable","isAuthenticated$","pipe","user","isAdmin$","role","token","localStorage","getItem","loadUserFromToken","login","email","password","setLoading","post","response","console","log","setItem","next","error","status","Error","register","firstName","lastName","logout","removeItem","get","subscribe","i0","ɵɵinject","i1","HttpClient","i2","ErrorService","i3","LoadingService","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\features\\auth\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, map, tap, catchError, throwError } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ErrorService } from '../../../core/services/error.service';\r\nimport { LoadingService } from '../../../core/services/loading.service';\r\n\r\nexport interface User {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  role: 'user' | 'admin';\r\n}\r\n\r\nexport interface AuthResponse {\r\n  user: User;\r\n  token: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = `${environment.apiUrl}/auth`;\r\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\r\n  currentUser$ = this.currentUserSubject.asObservable();\r\n  isAuthenticated$ = this.currentUser$.pipe(map(user => !!user));\r\n  isAdmin$ = this.currentUser$.pipe(map(user => user?.role === 'admin'));\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private errorService: ErrorService,\r\n    private loadingService: LoadingService\r\n  ) {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.loadUserFromToken(token);\r\n    }\r\n  }\r\n\r\n  login(email: string, password: string): Observable<AuthResponse> {\r\n    this.loadingService.setLoading(true);\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/login`, { email, password }).pipe(\r\n      tap((response: AuthResponse) => {\r\n        console.log('Login response:', response);\r\n        localStorage.setItem('token', response.token);\r\n        this.currentUserSubject.next(response.user);\r\n        this.loadingService.setLoading(false);\r\n      }),\r\n      catchError((error: any) => {\r\n        this.loadingService.setLoading(false);\r\n        console.error('Login error:', error);\r\n        if (error.status === 401) {\r\n          return throwError(() => new Error('Hibás email cím vagy jelszó!'));\r\n        }\r\n        return throwError(() => new Error('Hiba történt a bejelentkezés során. Kérjük próbálja újra később.'));\r\n      })\r\n    );\r\n  }\r\n\r\n  register(firstName: string, lastName: string, email: string, password: string): Observable<AuthResponse> {\r\n    this.loadingService.setLoading(true);\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/register`, { firstName, lastName, email, password }).pipe(\r\n      tap((response: AuthResponse) => {\r\n        console.log('Register response:', response);\r\n        localStorage.setItem('token', response.token);\r\n        this.currentUserSubject.next(response.user);\r\n        this.loadingService.setLoading(false);\r\n      }),\r\n      catchError((error: any) => {\r\n        this.loadingService.setLoading(false);\r\n        console.error('Register error:', error);\r\n        if (error.status === 400) {\r\n          return throwError(() => new Error('Ez az email cím már foglalt!'));\r\n        }\r\n        return throwError(() => new Error('Hiba történt a regisztráció során. Kérjük próbálja újra később.'));\r\n      })\r\n    );\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    this.currentUserSubject.next(null);\r\n  }\r\n\r\n  private loadUserFromToken(token: string): void {\r\n    this.http.get<User>(`${this.apiUrl}/me`).subscribe({\r\n      next: (user) => {\r\n        console.log('Loaded user from token:', user);\r\n        this.currentUserSubject.next(user);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading user from token:', error);\r\n        localStorage.removeItem('token');\r\n        this.currentUserSubject.next(null);\r\n      }\r\n    });\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}