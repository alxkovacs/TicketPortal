{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TicketService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/tickets`;\n  }\n  purchaseTicket(eventId, categoryName) {\n    return this.http.post(`${environment.apiUrl}/api/tickets`, {\n      eventId,\n      categoryName\n    });\n  }\n  getUserTickets() {\n    return this.http.get(`${this.apiUrl}/user`);\n  }\n  cancelTicket(ticketId) {\n    return this.http.post(`${this.apiUrl}/${ticketId}/cancel`, {});\n  }\n  getEventTickets(eventId) {\n    return this.http.get(`${environment.apiUrl}/api/tickets/event/${eventId}`);\n  }\n  static {\n    this.ɵfac = function TicketService_Factory(t) {\n      return new (t || TicketService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TicketService,\n      factory: TicketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","TicketService","constructor","http","apiUrl","purchaseTicket","eventId","categoryName","post","getUserTickets","get","cancelTicket","ticketId","getEventTickets","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\services\\ticket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { Ticket } from '../models/ticket.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TicketService {\r\n  private apiUrl = `${environment.apiUrl}/tickets`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  purchaseTicket(eventId: string, categoryName: string): Observable<Ticket> {\r\n    return this.http.post<Ticket>(`${environment.apiUrl}/api/tickets`, {\r\n      eventId,\r\n      categoryName\r\n    });\r\n  }\r\n\r\n  getUserTickets(): Observable<Ticket[]> {\r\n    return this.http.get<Ticket[]>(`${this.apiUrl}/user`);\r\n  }\r\n\r\n  cancelTicket(ticketId: string): Observable<void> {\r\n    return this.http.post<void>(`${this.apiUrl}/${ticketId}/cancel`, {});\r\n  }\r\n\r\n  getEventTickets(eventId: string): Observable<Ticket[]> {\r\n    return this.http.get<Ticket[]>(`${environment.apiUrl}/api/tickets/event/${eventId}`);\r\n  }\r\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,UAAU;EAET;EAEvCC,cAAcA,CAACC,OAAe,EAAEC,YAAoB;IAClD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAS,GAAGR,WAAW,CAACI,MAAM,cAAc,EAAE;MACjEE,OAAO;MACPC;KACD,CAAC;EACJ;EAEAE,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAW,GAAG,IAAI,CAACN,MAAM,OAAO,CAAC;EACvD;EAEAO,YAAYA,CAACC,QAAgB;IAC3B,OAAO,IAAI,CAACT,IAAI,CAACK,IAAI,CAAO,GAAG,IAAI,CAACJ,MAAM,IAAIQ,QAAQ,SAAS,EAAE,EAAE,CAAC;EACtE;EAEAC,eAAeA,CAACP,OAAe;IAC7B,OAAO,IAAI,CAACH,IAAI,CAACO,GAAG,CAAW,GAAGV,WAAW,CAACI,MAAM,sBAAsBE,OAAO,EAAE,CAAC;EACtF;;;uBAtBWL,aAAa,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbhB,aAAa;MAAAiB,OAAA,EAAbjB,aAAa,CAAAkB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}