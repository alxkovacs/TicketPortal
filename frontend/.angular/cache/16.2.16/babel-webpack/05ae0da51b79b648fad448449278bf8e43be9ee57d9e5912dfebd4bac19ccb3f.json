{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/user.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProfileComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, ProfileComponent_div_12_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.firstName.errors == null ? null : ctx_r0.firstName.errors[\"required\"]);\n  }\n}\nfunction ProfileComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, ProfileComponent_div_17_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.lastName.errors == null ? null : ctx_r1.lastName.errors[\"required\"]);\n  }\n}\nfunction ProfileComponent_div_22_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_22_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, ProfileComponent_div_22_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, ProfileComponent_div_22_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors == null ? null : ctx_r2.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.email.errors == null ? null : ctx_r2.email.errors[\"email\"]);\n  }\n}\nfunction ProfileComponent_div_36_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Current password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, ProfileComponent_div_36_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.currentPassword.errors == null ? null : ctx_r3.currentPassword.errors[\"required\"]);\n  }\n}\nfunction ProfileComponent_div_41_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"New password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_41_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, ProfileComponent_div_41_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, ProfileComponent_div_41_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.newPassword.errors == null ? null : ctx_r4.newPassword.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.newPassword.errors == null ? null : ctx_r4.newPassword.errors[\"minlength\"]);\n  }\n}\nexport class ProfileComponent {\n  constructor(formBuilder, userService) {\n    this.formBuilder = formBuilder;\n    this.userService = userService;\n    this.user = null;\n    this.profileForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]]\n    });\n    this.passwordForm = this.formBuilder.group({\n      currentPassword: ['', Validators.required],\n      newPassword: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  ngOnInit() {\n    this.userService.getUserProfile().subscribe({\n      next: user => {\n        this.user = user;\n        this.profileForm.patchValue({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email\n        });\n      },\n      error: error => {\n        console.error('Failed to load user profile:', error);\n      }\n    });\n  }\n  get firstName() {\n    return this.profileForm.get('firstName');\n  }\n  get lastName() {\n    return this.profileForm.get('lastName');\n  }\n  get email() {\n    return this.profileForm.get('email');\n  }\n  get currentPassword() {\n    return this.passwordForm.get('currentPassword');\n  }\n  get newPassword() {\n    return this.passwordForm.get('newPassword');\n  }\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      return;\n    }\n    this.userService.updateUserProfile(this.profileForm.value).subscribe({\n      next: user => {\n        this.user = user;\n      },\n      error: error => {\n        console.error('Failed to update profile:', error);\n      }\n    });\n  }\n  onPasswordSubmit() {\n    if (this.passwordForm.invalid) {\n      return;\n    }\n    const {\n      currentPassword,\n      newPassword\n    } = this.passwordForm.value;\n    this.userService.changePassword(currentPassword, newPassword).subscribe({\n      next: () => {\n        this.passwordForm.reset();\n      },\n      error: error => {\n        console.error('Failed to change password:', error);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ProfileComponent_Factory(t) {\n      return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProfileComponent,\n      selectors: [[\"app-profile\"]],\n      decls: 45,\n      vars: 19,\n      consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\"], [1, \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"firstName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"lastName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"card\", \"mt-4\"], [\"for\", \"currentPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"currentPassword\", \"formControlName\", \"currentPassword\", 1, \"form-control\"], [\"for\", \"newPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"newPassword\", \"formControlName\", \"newPassword\", 1, \"form-control\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n      template: function ProfileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\", 4);\n          i0.ɵɵtext(5, \"Profile\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 9);\n          i0.ɵɵtemplate(12, ProfileComponent_div_12_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 11);\n          i0.ɵɵtext(15, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 12);\n          i0.ɵɵtemplate(17, ProfileComponent_div_17_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 13);\n          i0.ɵɵtext(20, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 14);\n          i0.ɵɵtemplate(22, ProfileComponent_div_22_Template, 3, 2, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 15)(24, \"button\", 16);\n          i0.ɵɵtext(25, \" Update Profile \");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(26, \"div\", 17)(27, \"div\", 3)(28, \"h3\", 4);\n          i0.ɵɵtext(29, \"Change Password\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(30, \"div\", 5)(31, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_Template_form_ngSubmit_31_listener() {\n            return ctx.onPasswordSubmit();\n          });\n          i0.ɵɵelementStart(32, \"div\", 7)(33, \"label\", 18);\n          i0.ɵɵtext(34, \"Current Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(35, \"input\", 19);\n          i0.ɵɵtemplate(36, ProfileComponent_div_36_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 7)(38, \"label\", 20);\n          i0.ɵɵtext(39, \"New Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(40, \"input\", 21);\n          i0.ɵɵtemplate(41, ProfileComponent_div_41_Template, 3, 2, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"div\", 15)(43, \"button\", 16);\n          i0.ɵɵtext(44, \" Change Password \");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ctx.firstName.invalid && ctx.firstName.touched);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.firstName.invalid && ctx.firstName.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ctx.lastName.invalid && ctx.lastName.touched);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.lastName.invalid && ctx.lastName.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ctx.email.invalid && ctx.email.touched);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.email.invalid && ctx.email.touched);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.profileForm.invalid);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.passwordForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ctx.currentPassword.invalid && ctx.currentPassword.touched);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentPassword.invalid && ctx.currentPassword.touched);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ctx.newPassword.invalid && ctx.newPassword.touched);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.newPassword.invalid && ctx.newPassword.touched);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.passwordForm.invalid);\n        }\n      },\n      dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ProfileComponent_div_12_div_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","firstName","errors","ProfileComponent_div_17_div_1_Template","ctx_r1","lastName","ProfileComponent_div_22_div_1_Template","ProfileComponent_div_22_div_2_Template","ctx_r2","email","ProfileComponent_div_36_div_1_Template","ctx_r3","currentPassword","ProfileComponent_div_41_div_1_Template","ProfileComponent_div_41_div_2_Template","ctx_r4","newPassword","ProfileComponent","constructor","formBuilder","userService","user","profileForm","group","required","passwordForm","minLength","ngOnInit","getUserProfile","subscribe","next","patchValue","error","console","get","onSubmit","invalid","updateUserProfile","value","onPasswordSubmit","changePassword","reset","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ɵɵlistener","ProfileComponent_Template_form_ngSubmit_7_listener","ɵɵelement","ProfileComponent_div_12_Template","ProfileComponent_div_17_Template","ProfileComponent_div_22_Template","ProfileComponent_Template_form_ngSubmit_31_listener","ProfileComponent_div_36_Template","ProfileComponent_div_41_Template","ɵɵclassProp","touched"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\components\\user\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { User } from '../../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  template: `\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h3 class=\"text-center\">Profile</h3>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"firstName\" class=\"form-label\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"firstName\"\r\n                  formControlName=\"firstName\"\r\n                  [class.is-invalid]=\"firstName.invalid && firstName.touched\"\r\n                >\r\n                <div class=\"invalid-feedback\" *ngIf=\"firstName.invalid && firstName.touched\">\r\n                  <div *ngIf=\"firstName.errors?.['required']\">First name is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"lastName\" class=\"form-label\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  id=\"lastName\"\r\n                  formControlName=\"lastName\"\r\n                  [class.is-invalid]=\"lastName.invalid && lastName.touched\"\r\n                >\r\n                <div class=\"invalid-feedback\" *ngIf=\"lastName.invalid && lastName.touched\">\r\n                  <div *ngIf=\"lastName.errors?.['required']\">Last name is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"email\" class=\"form-label\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control\"\r\n                  id=\"email\"\r\n                  formControlName=\"email\"\r\n                  [class.is-invalid]=\"email.invalid && email.touched\"\r\n                >\r\n                <div class=\"invalid-feedback\" *ngIf=\"email.invalid && email.touched\">\r\n                  <div *ngIf=\"email.errors?.['required']\">Email is required</div>\r\n                  <div *ngIf=\"email.errors?.['email']\">Please enter a valid email</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-grid\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"profileForm.invalid\">\r\n                  Update Profile\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card mt-4\">\r\n          <div class=\"card-header\">\r\n            <h3 class=\"text-center\">Change Password</h3>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form [formGroup]=\"passwordForm\" (ngSubmit)=\"onPasswordSubmit()\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"currentPassword\" class=\"form-label\">Current Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"currentPassword\"\r\n                  formControlName=\"currentPassword\"\r\n                  [class.is-invalid]=\"currentPassword.invalid && currentPassword.touched\"\r\n                >\r\n                <div class=\"invalid-feedback\" *ngIf=\"currentPassword.invalid && currentPassword.touched\">\r\n                  <div *ngIf=\"currentPassword.errors?.['required']\">Current password is required</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"newPassword\" class=\"form-label\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control\"\r\n                  id=\"newPassword\"\r\n                  formControlName=\"newPassword\"\r\n                  [class.is-invalid]=\"newPassword.invalid && newPassword.touched\"\r\n                >\r\n                <div class=\"invalid-feedback\" *ngIf=\"newPassword.invalid && newPassword.touched\">\r\n                  <div *ngIf=\"newPassword.errors?.['required']\">New password is required</div>\r\n                  <div *ngIf=\"newPassword.errors?.['minlength']\">Password must be at least 6 characters</div>\r\n                </div>\r\n              </div>\r\n              <div class=\"d-grid\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"passwordForm.invalid\">\r\n                  Change Password\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profileForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n  user: User | null = null;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService\r\n  ) {\r\n    this.profileForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]]\r\n    });\r\n\r\n    this.passwordForm = this.formBuilder.group({\r\n      currentPassword: ['', Validators.required],\r\n      newPassword: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUserProfile().subscribe({\r\n      next: (user) => {\r\n        this.user = user;\r\n        this.profileForm.patchValue({\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          email: user.email\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load user profile:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  get firstName() {\r\n    return this.profileForm.get('firstName')!;\r\n  }\r\n\r\n  get lastName() {\r\n    return this.profileForm.get('lastName')!;\r\n  }\r\n\r\n  get email() {\r\n    return this.profileForm.get('email')!;\r\n  }\r\n\r\n  get currentPassword() {\r\n    return this.passwordForm.get('currentPassword')!;\r\n  }\r\n\r\n  get newPassword() {\r\n    return this.passwordForm.get('newPassword')!;\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.profileForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.userService.updateUserProfile(this.profileForm.value).subscribe({\r\n      next: (user) => {\r\n        this.user = user;\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to update profile:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  onPasswordSubmit(): void {\r\n    if (this.passwordForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const { currentPassword, newPassword } = this.passwordForm.value;\r\n    this.userService.changePassword(currentPassword, newPassword).subscribe({\r\n      next: () => {\r\n        this.passwordForm.reset();\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to change password:', error);\r\n      }\r\n    });\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}