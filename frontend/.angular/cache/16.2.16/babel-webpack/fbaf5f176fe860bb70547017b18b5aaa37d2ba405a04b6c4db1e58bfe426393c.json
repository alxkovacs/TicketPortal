{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.authService.isAdmin()) {\n      return true;\n    }\n    this.router.navigate(['/']);\n    return false;\n  }\n  static {\n    this.ɵfac = function AdminGuard_Factory(t) {\n      return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AdminGuard,\n      factory: AdminGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AdminGuard","constructor","authService","router","canActivate","isAdmin","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\guards\\admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(): boolean {\n    if (this.authService.isAdmin()) {\n      return true;\n    }\n\n    this.router.navigate(['/']);\n    return false;\n  }\n} "],"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,WAAW,CAACG,OAAO,EAAE,EAAE;MAC9B,OAAO,IAAI;;IAGb,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,OAAO,KAAK;EACd;;;uBAVWN,UAAU,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAVZ,UAAU;MAAAa,OAAA,EAAVb,UAAU,CAAAc,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}