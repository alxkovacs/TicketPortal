{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/events`;\n  }\n  getEvents() {\n    return this.http.get(this.apiUrl);\n  }\n  getEvent(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createEvent(event) {\n    console.log('EventService - createEvent kérés indul:', event);\n    console.log('JWT token a kéréshez:', localStorage.getItem('token'));\n    // A szerző ID kezelése, ha nincs hozzáadva (néha ezt várja a backend)\n    if (!event.organizer) {\n      // Ha van user adat a localStorage-ban, használjuk az ID-ját\n      const userStr = localStorage.getItem('user');\n      if (userStr) {\n        try {\n          const userData = JSON.parse(userStr);\n          if (userData && userData.user && userData.user._id) {\n            event.organizer = userData.user._id;\n          } else if (userData && userData._id) {\n            event.organizer = userData._id;\n          }\n        } catch (e) {}\n      }\n    }\n    // Dátum formázás ellenőrzése\n    if (event.date && !(event.date instanceof Date) && !isNaN(new Date(event.date).getTime())) {\n      // Ha a dátum érvényes, de nem Date objektum, biztosítsuk, hogy ISO formátumban van\n      event.date = new Date(event.date).toISOString();\n    }\n    return this.http.post(this.apiUrl, event);\n  }\n  updateEvent(id, event) {\n    return this.http.put(`${this.apiUrl}/${id}`, event);\n  }\n  deleteEvent(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  getOrganizerEvents() {\n    return this.http.get(`${environment.apiUrl}/api/users/my-events`);\n  }\n  static {\n    this.ɵfac = function EventService_Factory(t) {\n      return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EventService,\n      factory: EventService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","EventService","constructor","http","apiUrl","getEvents","get","getEvent","id","createEvent","event","console","log","localStorage","getItem","organizer","userStr","userData","JSON","parse","user","_id","e","date","Date","isNaN","getTime","toISOString","post","updateEvent","put","deleteEvent","delete","getOrganizerEvents","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\services\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Event, TicketCategory } from '../models/event.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private apiUrl = `${environment.apiUrl}/events`;\n\n  constructor(private http: HttpClient) {}\n\n  getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(this.apiUrl);\n  }\n\n  getEvent(id: string): Observable<Event> {\n    return this.http.get<Event>(`${this.apiUrl}/${id}`);\n  }\n\n  createEvent(event: any): Observable<Event> {\n    console.log('EventService - createEvent kérés indul:', event);\n    console.log('JWT token a kéréshez:', localStorage.getItem('token'));\n    \n    // A szerző ID kezelése, ha nincs hozzáadva (néha ezt várja a backend)\n    if (!event.organizer) {\n      // Ha van user adat a localStorage-ban, használjuk az ID-ját\n      const userStr = localStorage.getItem('user');\n      if (userStr) {\n        try {\n          const userData = JSON.parse(userStr);\n          if (userData && userData.user && userData.user._id) {\n            event.organizer = userData.user._id;\n          } else if (userData && userData._id) {\n            event.organizer = userData._id;\n          }\n        } catch (e) {}\n      }\n    }\n    \n    // Dátum formázás ellenőrzése\n    if (event.date && !(event.date instanceof Date) && !isNaN(new Date(event.date).getTime())) {\n      // Ha a dátum érvényes, de nem Date objektum, biztosítsuk, hogy ISO formátumban van\n      event.date = new Date(event.date).toISOString();\n    }\n    \n    return this.http.post<Event>(this.apiUrl, event);\n  }\n\n  updateEvent(id: string, event: Event): Observable<Event> {\n    return this.http.put<Event>(`${this.apiUrl}/${id}`, event);\n  }\n\n  deleteEvent(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  getOrganizerEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(`${environment.apiUrl}/api/users/my-events`);\n  }\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,SAAS;EAER;EAEvCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACrD;EAEAC,WAAWA,CAACC,KAAU;IACpBC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,KAAK,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAEnE;IACA,IAAI,CAACJ,KAAK,CAACK,SAAS,EAAE;MACpB;MACA,MAAMC,OAAO,GAAGH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC5C,IAAIE,OAAO,EAAE;QACX,IAAI;UACF,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;UACpC,IAAIC,QAAQ,IAAIA,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACC,GAAG,EAAE;YAClDX,KAAK,CAACK,SAAS,GAAGE,QAAQ,CAACG,IAAI,CAACC,GAAG;WACpC,MAAM,IAAIJ,QAAQ,IAAIA,QAAQ,CAACI,GAAG,EAAE;YACnCX,KAAK,CAACK,SAAS,GAAGE,QAAQ,CAACI,GAAG;;SAEjC,CAAC,OAAOC,CAAC,EAAE;;;IAIhB;IACA,IAAIZ,KAAK,CAACa,IAAI,IAAI,EAAEb,KAAK,CAACa,IAAI,YAAYC,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,CAACd,KAAK,CAACa,IAAI,CAAC,CAACG,OAAO,EAAE,CAAC,EAAE;MACzF;MACAhB,KAAK,CAACa,IAAI,GAAG,IAAIC,IAAI,CAACd,KAAK,CAACa,IAAI,CAAC,CAACI,WAAW,EAAE;;IAGjD,OAAO,IAAI,CAACxB,IAAI,CAACyB,IAAI,CAAQ,IAAI,CAACxB,MAAM,EAAEM,KAAK,CAAC;EAClD;EAEAmB,WAAWA,CAACrB,EAAU,EAAEE,KAAY;IAClC,OAAO,IAAI,CAACP,IAAI,CAAC2B,GAAG,CAAQ,GAAG,IAAI,CAAC1B,MAAM,IAAII,EAAE,EAAE,EAAEE,KAAK,CAAC;EAC5D;EAEAqB,WAAWA,CAACvB,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAAC6B,MAAM,CAAO,GAAG,IAAI,CAAC5B,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;EAEAyB,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAAC9B,IAAI,CAACG,GAAG,CAAU,GAAGN,WAAW,CAACI,MAAM,sBAAsB,CAAC;EAC5E;;;uBApDWH,YAAY,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZpC,YAAY;MAAAqC,OAAA,EAAZrC,YAAY,CAAAsC,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}