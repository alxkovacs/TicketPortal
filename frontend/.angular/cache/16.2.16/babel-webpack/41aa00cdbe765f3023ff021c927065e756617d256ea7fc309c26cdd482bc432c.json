{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getUserProfile() {\n    return this.http.get(`${environment.apiUrl}/api/users/profile`);\n  }\n  updateUserProfile(profileData) {\n    return this.http.put(`${environment.apiUrl}/api/users/profile`, profileData);\n  }\n  changePassword(currentPassword, newPassword) {\n    return this.http.put(`${environment.apiUrl}/api/users/change-password`, {\n      currentPassword,\n      newPassword\n    });\n  }\n  getAllUsers() {\n    return this.http.get(`${environment.apiUrl}/api/users`);\n  }\n  updateUserRole(userId, role) {\n    return this.http.put(`${environment.apiUrl}/api/users/${userId}/role`, {\n      role\n    });\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","UserService","constructor","http","getUserProfile","get","apiUrl","updateUserProfile","profileData","put","changePassword","currentPassword","newPassword","getAllUsers","updateUserRole","userId","role","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface User {\r\n  _id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  role: 'user' | 'admin';\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserProfile(): Observable<User> {\r\n    return this.http.get<User>(`${environment.apiUrl}/api/users/profile`);\r\n  }\r\n\r\n  updateUserProfile(profileData: Partial<User>): Observable<User> {\r\n    return this.http.put<User>(`${environment.apiUrl}/api/users/profile`, profileData);\r\n  }\r\n\r\n  changePassword(currentPassword: string, newPassword: string): Observable<void> {\r\n    return this.http.put<void>(`${environment.apiUrl}/api/users/change-password`, {\r\n      currentPassword,\r\n      newPassword\r\n    });\r\n  }\r\n\r\n  getAllUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(`${environment.apiUrl}/api/users`);\r\n  }\r\n\r\n  updateUserRole(userId: string, role: 'user' | 'admin'): Observable<User> {\r\n    return this.http.put<User>(`${environment.apiUrl}/api/users/${userId}/role`, { role });\r\n  }\r\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAe5D,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAO,GAAGL,WAAW,CAACM,MAAM,oBAAoB,CAAC;EACvE;EAEAC,iBAAiBA,CAACC,WAA0B;IAC1C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAO,GAAGT,WAAW,CAACM,MAAM,oBAAoB,EAAEE,WAAW,CAAC;EACpF;EAEAE,cAAcA,CAACC,eAAuB,EAAEC,WAAmB;IACzD,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAO,GAAGT,WAAW,CAACM,MAAM,4BAA4B,EAAE;MAC5EK,eAAe;MACfC;KACD,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAS,GAAGL,WAAW,CAACM,MAAM,YAAY,CAAC;EACjE;EAEAQ,cAAcA,CAACC,MAAc,EAAEC,IAAsB;IACnD,OAAO,IAAI,CAACb,IAAI,CAACM,GAAG,CAAO,GAAGT,WAAW,CAACM,MAAM,cAAcS,MAAM,OAAO,EAAE;MAAEC;IAAI,CAAE,CAAC;EACxF;;;uBAxBWf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXnB,WAAW;MAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}