{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/events`;\n  }\n  getEvents() {\n    return this.http.get(this.apiUrl);\n  }\n  getEvent(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  /**\n   * Új esemény létrehozása\n   * Minimalista megközelítés - csak a leg\n   * @param eventData Az új esemény adatai\n   */\n  createEvent(eventData) {\n    console.log('EventService - Minimalista createEvent kérés indul', eventData);\n    // TELJESEN új megközelítés - Minimalist adatok\n    // Csak a legfontosabb adatokat küljük, a lehető legegyszerűbb formában\n    const simpleEventData = {\n      title: eventData.title,\n      description: eventData.description,\n      date: new Date(eventData.date).toISOString(),\n      location: eventData.location,\n      ticketCategories: [{\n        name: eventData.ticketCategories && eventData.ticketCategories.length > 0 ? eventData.ticketCategories[0].name : 'Alap jegy',\n        price: eventData.ticketCategories && eventData.ticketCategories.length > 0 ? Number(eventData.ticketCategories[0].price) : 1000,\n        availableTickets: eventData.ticketCategories && eventData.ticketCategories.length > 0 ? Number(eventData.ticketCategories[0].availableTickets) : 100\n      }]\n    };\n    // 1) Változat - Alap objektum küldése\n    console.log('Küldés 1. formátumban (egyszerű objektum):', simpleEventData);\n    return this.http.post(this.apiUrl, simpleEventData).pipe(catchError(error => {\n      console.error('1. formátum sikertelen:', error);\n      // 2) Változat - Form adat formátumban küldés\n      console.log('Próbálkozás 2. formátumban (FormData)');\n      const formData = new FormData();\n      formData.append('title', eventData.title);\n      formData.append('description', eventData.description);\n      formData.append('date', new Date(eventData.date).toISOString());\n      formData.append('location', eventData.location);\n      formData.append('ticketCategoryName', 'Alap jegy');\n      formData.append('ticketCategoryPrice', '1000');\n      formData.append('ticketCategoryAvailableTickets', '100');\n      return this.http.post(this.apiUrl, formData).pipe(catchError(error2 => {\n        console.error('2. formátum sikertelen:', error2);\n        // 3) Változat - Query paraméterek\n        console.log('Próbálkozás 3. formátumban (query params)');\n        const params = new HttpParams().set('title', eventData.title).set('description', eventData.description).set('date', new Date(eventData.date).toISOString()).set('location', eventData.location);\n        return this.http.post(this.apiUrl, null, {\n          params\n        }).pipe(catchError(error3 => {\n          console.error('Minden formátum sikertelen:', error3);\n          return throwError(() => error3);\n        }));\n      }));\n    }));\n  }\n  updateEvent(id, event) {\n    return this.http.put(`${this.apiUrl}/${id}`, event);\n  }\n  deleteEvent(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  getOrganizerEvents() {\n    return this.http.get(`${environment.apiUrl}/api/users/my-events`);\n  }\n  static {\n    this.ɵfac = function EventService_Factory(t) {\n      return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EventService,\n      factory: EventService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","EventService","constructor","http","apiUrl","getEvents","get","getEvent","id","createEvent","eventData","console","log","simpleEventData","title","description","date","Date","toISOString","location","ticketCategories","name","length","price","Number","availableTickets","post","pipe","catchError","error","formData","FormData","append","error2","params","HttpParams","set","error3","throwError","updateEvent","event","put","deleteEvent","delete","getOrganizerEvents","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\SZTE_PROGINFO\\programrendszerek_fejlesztese\\TicketPortal\\frontend\\src\\app\\services\\event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Event, TicketCategory } from '../models/event.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private apiUrl = `${environment.apiUrl}/events`;\n\n  constructor(private http: HttpClient) {}\n\n  getEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(this.apiUrl);\n  }\n\n  getEvent(id: string): Observable<Event> {\n    return this.http.get<Event>(`${this.apiUrl}/${id}`);\n  }\n\n  /**\n   * Új esemény létrehozása\n   * Minimalista megközelítés - csak a leg\n   * @param eventData Az új esemény adatai\n   */\n  createEvent(eventData: any): Observable<Event> {\n    console.log('EventService - Minimalista createEvent kérés indul', eventData);\n    \n    // TELJESEN új megközelítés - Minimalist adatok\n    // Csak a legfontosabb adatokat küljük, a lehető legegyszerűbb formában\n    const simpleEventData = {\n      title: eventData.title,\n      description: eventData.description,\n      date: new Date(eventData.date).toISOString(),\n      location: eventData.location,\n      ticketCategories: [\n        {\n          name: eventData.ticketCategories && eventData.ticketCategories.length > 0 ? \n                eventData.ticketCategories[0].name : 'Alap jegy',\n          price: eventData.ticketCategories && eventData.ticketCategories.length > 0 ? \n                 Number(eventData.ticketCategories[0].price) : 1000,\n          availableTickets: eventData.ticketCategories && eventData.ticketCategories.length > 0 ? \n                            Number(eventData.ticketCategories[0].availableTickets) : 100\n        }\n      ]\n    };\n    \n    // 1) Változat - Alap objektum küldése\n    console.log('Küldés 1. formátumban (egyszerű objektum):', simpleEventData);\n    return this.http.post<Event>(this.apiUrl, simpleEventData).pipe(\n      catchError(error => {\n        console.error('1. formátum sikertelen:', error);\n        \n        // 2) Változat - Form adat formátumban küldés\n        console.log('Próbálkozás 2. formátumban (FormData)');\n        const formData = new FormData();\n        formData.append('title', eventData.title);\n        formData.append('description', eventData.description);\n        formData.append('date', new Date(eventData.date).toISOString());\n        formData.append('location', eventData.location);\n        formData.append('ticketCategoryName', 'Alap jegy');\n        formData.append('ticketCategoryPrice', '1000');\n        formData.append('ticketCategoryAvailableTickets', '100');\n        \n        return this.http.post<Event>(this.apiUrl, formData).pipe(\n          catchError(error2 => {\n            console.error('2. formátum sikertelen:', error2);\n            \n            // 3) Változat - Query paraméterek\n            console.log('Próbálkozás 3. formátumban (query params)');\n            const params = new HttpParams()\n              .set('title', eventData.title)\n              .set('description', eventData.description)\n              .set('date', new Date(eventData.date).toISOString())\n              .set('location', eventData.location);\n            \n            return this.http.post<Event>(this.apiUrl, null, { params }).pipe(\n              catchError(error3 => {\n                console.error('Minden formátum sikertelen:', error3);\n                return throwError(() => error3);\n              })\n            );\n          })\n        );\n      })\n    );\n  }\n\n  updateEvent(id: string, event: Event): Observable<Event> {\n    return this.http.put<Event>(`${this.apiUrl}/${id}`, event);\n  }\n\n  deleteEvent(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  getOrganizerEvents(): Observable<Event[]> {\n    return this.http.get<Event[]>(`${environment.apiUrl}/api/users/my-events`);\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}